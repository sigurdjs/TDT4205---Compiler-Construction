VAR x,y,z
FUNC f(a,b,c,d,e,f,g,h)
BEGIN
    VAR trash
    PRINT "a:", a, " b:", b, " c:", c, "\n"
    PRINT "d:", d, " e:", e, " f:", f, "\n"
    PRINT "g:", g, " h:", h, "\n"

    trash := args((a*b*c),b,c,d,e,f,g,h)
    // Access arguments, assignments:
    x := a
    y := b
    // Print statements

    WHILE x < 10 DO
    BEGIN
        y := 0
        WHILE y < 10 DO
        BEGIN
            PRINT "Looping....\n"
            y := y + 1
        END
        x := x + 1
    END


    IF a > 1 THEN
        PRINT "In if case\n"
    ELSE
        PRINT "In else case\n"
    RETURN z
END

FUNC args(a,b,c,d,e,f,g,h)
BEGIN
    PRINT "In function args\n"
    PRINT "a:", a, " b:", b, " c:", c, "\n"
    PRINT "d:", d, " e:", e, " f:", f, "\n"
    PRINT "g:", g, " h:", h, "\n"
END
